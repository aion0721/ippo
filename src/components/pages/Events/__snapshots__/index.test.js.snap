// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should match snapshot: Events/loading 1`] = `
.c0 {
  padding: 10px 15px;
}

<Events
  data={
    Object {
      "events": null,
      "loading": true,
      "refetch": [MockFunction],
    }
  }
  registerNotification={[MockFunction]}
>
  <NavigationBar
    appName="IPPO"
  >
    <Blueprint3.Navbar>
      <div
        className="bp3-navbar"
      >
        <Blueprint3.NavbarGroup
          align="left"
        >
          <div
            className="bp3-navbar-group bp3-align-left"
          >
            <Blueprint3.NavbarHeading>
              <div
                className="bp3-navbar-heading"
              >
                IPPO
              </div>
            </Blueprint3.NavbarHeading>
          </div>
        </Blueprint3.NavbarGroup>
      </div>
    </Blueprint3.Navbar>
  </NavigationBar>
  <styled.div>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "
  padding: 10px 15px;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <Blueprint3.Spinner>
          <div
            className="bp3-spinner"
          >
            <div
              className="bp3-spinner-animation"
            >
              <svg
                height={50}
                strokeWidth="8.00"
                viewBox="1.00 1.00 98.00 98.00"
                width={50}
              >
                <path
                  className="bp3-spinner-track"
                  d="M 50,50 m 0,-45 a 45,45 0 1 1 0,90 a 45,45 0 1 1 0,-90"
                />
                <path
                  className="bp3-spinner-head"
                  d="M 50,50 m 0,-45 a 45,45 0 1 1 0,90 a 45,45 0 1 1 0,-90"
                  pathLength={280}
                  strokeDasharray="280 280"
                  strokeDashoffset={210}
                />
              </svg>
            </div>
          </div>
        </Blueprint3.Spinner>
      </div>
    </StyledComponent>
  </styled.div>
</Events>
`;

exports[`should match snapshot: Events/nocontents 1`] = `
.c0 {
  padding: 10px 15px;
}

<Events
  data={
    Object {
      "events": null,
      "loading": false,
      "refetch": [MockFunction],
    }
  }
  registerNotification={[MockFunction]}
>
  <NavigationBar
    appName="IPPO"
  >
    <Blueprint3.Navbar>
      <div
        className="bp3-navbar"
      >
        <Blueprint3.NavbarGroup
          align="left"
        >
          <div
            className="bp3-navbar-group bp3-align-left"
          >
            <Blueprint3.NavbarHeading>
              <div
                className="bp3-navbar-heading"
              >
                IPPO
              </div>
            </Blueprint3.NavbarHeading>
          </div>
        </Blueprint3.NavbarGroup>
      </div>
    </Blueprint3.Navbar>
  </NavigationBar>
  <styled.div>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "
  padding: 10px 15px;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <Blueprint3.Text>
          <div
            className=""
          >
            No Contents
          </div>
        </Blueprint3.Text>
      </div>
    </StyledComponent>
  </styled.div>
</Events>
`;

exports[`should match snapshot: Events/nomal 1`] = `
.c0 {
  padding: 10px 15px;
}

<Events
  data={
    Object {
      "events": Object {
        "connpass": Object {
          "events": Array [
            Object {
              "catch": "イベントの説明です",
              "event_id": 0,
              "event_url": "https://connpass.com/",
              "place": "東京都千代田区丸の内",
              "started_at": "2012-04-17T18:30:00+09:00",
              "title": "イベントのタイトル0",
            },
            Object {
              "catch": "イベントの説明です",
              "event_id": 1,
              "event_url": "https://connpass.com/",
              "place": "東京都千代田区丸の内",
              "started_at": "2012-04-17T18:30:00+09:00",
              "title": "イベントのタイトル1",
            },
            Object {
              "catch": "イベントの説明です",
              "event_id": 2,
              "event_url": "https://connpass.com/",
              "place": "東京都千代田区丸の内",
              "started_at": "2012-04-17T18:30:00+09:00",
              "title": "イベントのタイトル2",
            },
            Object {
              "catch": "イベントの説明です",
              "event_id": 3,
              "event_url": "https://connpass.com/",
              "place": "東京都千代田区丸の内",
              "started_at": "2012-04-17T18:30:00+09:00",
              "title": "イベントのタイトル3",
            },
            Object {
              "catch": "イベントの説明です",
              "event_id": 4,
              "event_url": "https://connpass.com/",
              "place": "東京都千代田区丸の内",
              "started_at": "2012-04-17T18:30:00+09:00",
              "title": "イベントのタイトル4",
            },
            Object {
              "catch": "イベントの説明です",
              "event_id": 5,
              "event_url": "https://connpass.com/",
              "place": "東京都千代田区丸の内",
              "started_at": "2012-04-17T18:30:00+09:00",
              "title": "イベントのタイトル5",
            },
            Object {
              "catch": "イベントの説明です",
              "event_id": 6,
              "event_url": "https://connpass.com/",
              "place": "東京都千代田区丸の内",
              "started_at": "2012-04-17T18:30:00+09:00",
              "title": "イベントのタイトル6",
            },
            Object {
              "catch": "イベントの説明です",
              "event_id": 7,
              "event_url": "https://connpass.com/",
              "place": "東京都千代田区丸の内",
              "started_at": "2012-04-17T18:30:00+09:00",
              "title": "イベントのタイトル7",
            },
            Object {
              "catch": "イベントの説明です",
              "event_id": 8,
              "event_url": "https://connpass.com/",
              "place": "東京都千代田区丸の内",
              "started_at": "2012-04-17T18:30:00+09:00",
              "title": "イベントのタイトル8",
            },
            Object {
              "catch": "イベントの説明です",
              "event_id": 9,
              "event_url": "https://connpass.com/",
              "place": "東京都千代田区丸の内",
              "started_at": "2012-04-17T18:30:00+09:00",
              "title": "イベントのタイトル9",
            },
          ],
          "results_available": 10,
        },
      },
      "loading": false,
      "refetch": [MockFunction],
    }
  }
  registerNotification={[MockFunction]}
>
  <NavigationBar
    appName="IPPO"
  >
    <Blueprint3.Navbar>
      <div
        className="bp3-navbar"
      >
        <Blueprint3.NavbarGroup
          align="left"
        >
          <div
            className="bp3-navbar-group bp3-align-left"
          >
            <Blueprint3.NavbarHeading>
              <div
                className="bp3-navbar-heading"
              >
                IPPO
              </div>
            </Blueprint3.NavbarHeading>
          </div>
        </Blueprint3.NavbarGroup>
      </div>
    </Blueprint3.Navbar>
  </NavigationBar>
  <styled.div>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "
  padding: 10px 15px;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <Blueprint3.Text>
          <div
            className=""
          >
            No Contents
          </div>
        </Blueprint3.Text>
      </div>
    </StyledComponent>
  </styled.div>
</Events>
`;
