// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should match snapshot: InternalEvents/loading 1`] = `
.c0 {
  padding: 10px 15px;
}

<InternalEvents
  data={
    Object {
      "internalEvents": null,
      "loading": true,
    }
  }
  registerNotification={[MockFunction]}
>
  <NavigationBar
    appName="IPPO"
  >
    <Blueprint3.Navbar>
      <div
        className="bp3-navbar"
      >
        <Blueprint3.NavbarGroup
          align="left"
        >
          <div
            className="bp3-navbar-group bp3-align-left"
          >
            <Blueprint3.NavbarHeading>
              <div
                className="bp3-navbar-heading"
              >
                IPPO
              </div>
            </Blueprint3.NavbarHeading>
          </div>
        </Blueprint3.NavbarGroup>
      </div>
    </Blueprint3.Navbar>
  </NavigationBar>
  <styled.div>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "
  padding: 10px 15px;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <Blueprint3.Spinner>
          <div
            className="bp3-spinner"
          >
            <div
              className="bp3-spinner-animation"
            >
              <svg
                height={50}
                strokeWidth="8.00"
                viewBox="1.00 1.00 98.00 98.00"
                width={50}
              >
                <path
                  className="bp3-spinner-track"
                  d="M 50,50 m 0,-45 a 45,45 0 1 1 0,90 a 45,45 0 1 1 0,-90"
                />
                <path
                  className="bp3-spinner-head"
                  d="M 50,50 m 0,-45 a 45,45 0 1 1 0,90 a 45,45 0 1 1 0,-90"
                  pathLength={280}
                  strokeDasharray="280 280"
                  strokeDashoffset={210}
                />
              </svg>
            </div>
          </div>
        </Blueprint3.Spinner>
      </div>
    </StyledComponent>
  </styled.div>
</InternalEvents>
`;

exports[`should match snapshot: InternalEvents/nocontents 1`] = `
.c0 {
  padding: 10px 15px;
}

<InternalEvents
  data={
    Object {
      "internalEvents": null,
      "loading": false,
    }
  }
  registerNotification={[MockFunction]}
>
  <NavigationBar
    appName="IPPO"
  >
    <Blueprint3.Navbar>
      <div
        className="bp3-navbar"
      >
        <Blueprint3.NavbarGroup
          align="left"
        >
          <div
            className="bp3-navbar-group bp3-align-left"
          >
            <Blueprint3.NavbarHeading>
              <div
                className="bp3-navbar-heading"
              >
                IPPO
              </div>
            </Blueprint3.NavbarHeading>
          </div>
        </Blueprint3.NavbarGroup>
      </div>
    </Blueprint3.Navbar>
  </NavigationBar>
  <styled.div>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "
  padding: 10px 15px;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <Blueprint3.Text>
          <div
            className=""
          >
            No Contents
          </div>
        </Blueprint3.Text>
      </div>
    </StyledComponent>
  </styled.div>
</InternalEvents>
`;

exports[`should match snapshot: InternalEvents/nomal 1`] = `
.c3 {
  border-radius: 50%;
  height: 50px;
  width: 50px;
}

.c2 {
  position: fixed;
  right: 16px;
  bottom: 16px;
}

.c0 {
  padding: 10px 15px;
}

.c1 {
  margin: 8px 0;
}

<InternalEvents
  data={
    Object {
      "internalEvents": Array [
        Object {
          "catchMessage": "イベントの説明です",
          "id": "0",
          "place": "東京都千代田区丸の内",
          "startedAt": "2018/12/1 10:30",
          "title": "イベントのタイトル0",
        },
        Object {
          "catchMessage": "イベントの説明です",
          "id": "1",
          "place": "東京都千代田区丸の内",
          "startedAt": "2018/12/1 10:30",
          "title": "イベントのタイトル1",
        },
        Object {
          "catchMessage": "イベントの説明です",
          "id": "2",
          "place": "東京都千代田区丸の内",
          "startedAt": "2018/12/1 10:30",
          "title": "イベントのタイトル2",
        },
        Object {
          "catchMessage": "イベントの説明です",
          "id": "3",
          "place": "東京都千代田区丸の内",
          "startedAt": "2018/12/1 10:30",
          "title": "イベントのタイトル3",
        },
        Object {
          "catchMessage": "イベントの説明です",
          "id": "4",
          "place": "東京都千代田区丸の内",
          "startedAt": "2018/12/1 10:30",
          "title": "イベントのタイトル4",
        },
        Object {
          "catchMessage": "イベントの説明です",
          "id": "5",
          "place": "東京都千代田区丸の内",
          "startedAt": "2018/12/1 10:30",
          "title": "イベントのタイトル5",
        },
        Object {
          "catchMessage": "イベントの説明です",
          "id": "6",
          "place": "東京都千代田区丸の内",
          "startedAt": "2018/12/1 10:30",
          "title": "イベントのタイトル6",
        },
        Object {
          "catchMessage": "イベントの説明です",
          "id": "7",
          "place": "東京都千代田区丸の内",
          "startedAt": "2018/12/1 10:30",
          "title": "イベントのタイトル7",
        },
        Object {
          "catchMessage": "イベントの説明です",
          "id": "8",
          "place": "東京都千代田区丸の内",
          "startedAt": "2018/12/1 10:30",
          "title": "イベントのタイトル8",
        },
        Object {
          "catchMessage": "イベントの説明です",
          "id": "9",
          "place": "東京都千代田区丸の内",
          "startedAt": "2018/12/1 10:30",
          "title": "イベントのタイトル9",
        },
      ],
      "loading": false,
    }
  }
  registerNotification={[MockFunction]}
>
  <NavigationBar
    appName="IPPO"
  >
    <Blueprint3.Navbar>
      <div
        className="bp3-navbar"
      >
        <Blueprint3.NavbarGroup
          align="left"
        >
          <div
            className="bp3-navbar-group bp3-align-left"
          >
            <Blueprint3.NavbarHeading>
              <div
                className="bp3-navbar-heading"
              >
                IPPO
              </div>
            </Blueprint3.NavbarHeading>
          </div>
        </Blueprint3.NavbarGroup>
      </div>
    </Blueprint3.Navbar>
  </NavigationBar>
  <styled.div>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "
  padding: 10px 15px;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <styled.div
          key="0"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bxivhb",
                  "isStatic": true,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  margin: 8px 0;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bxivhb",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c1"
            >
              <EventCard
                catchMessage="イベントの説明です"
                datetime="2018年12月01日 10:30〜"
                eventUrl=""
                interactive={true}
                place="東京都千代田区丸の内"
                title="イベントのタイトル0"
              >
                <Blueprint3.Card
                  elevation={2}
                  interactive={true}
                  onClick={[Function]}
                >
                  <div
                    className="bp3-card bp3-interactive bp3-elevation-2"
                    onClick={[Function]}
                  >
                    <h3
                      className="bp3-heading"
                    >
                      イベントのタイトル0
                    </h3>
                    <Blueprint3.Text>
                      <div
                        className=""
                      >
                        概要：イベントの説明です
                      </div>
                    </Blueprint3.Text>
                    <Blueprint3.Text>
                      <div
                        className=""
                      >
                        場所：東京都千代田区丸の内
                      </div>
                    </Blueprint3.Text>
                    <Blueprint3.Text>
                      <div
                        className=""
                      >
                        日時：2018年12月01日 10:30〜
                      </div>
                    </Blueprint3.Text>
                  </div>
                </Blueprint3.Card>
              </EventCard>
            </div>
          </StyledComponent>
        </styled.div>
        <styled.div
          key="1"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bxivhb",
                  "isStatic": true,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  margin: 8px 0;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bxivhb",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c1"
            >
              <EventCard
                catchMessage="イベントの説明です"
                datetime="2018年12月01日 10:30〜"
                eventUrl=""
                interactive={true}
                place="東京都千代田区丸の内"
                title="イベントのタイトル1"
              >
                <Blueprint3.Card
                  elevation={2}
                  interactive={true}
                  onClick={[Function]}
                >
                  <div
                    className="bp3-card bp3-interactive bp3-elevation-2"
                    onClick={[Function]}
                  >
                    <h3
                      className="bp3-heading"
                    >
                      イベントのタイトル1
                    </h3>
                    <Blueprint3.Text>
                      <div
                        className=""
                      >
                        概要：イベントの説明です
                      </div>
                    </Blueprint3.Text>
                    <Blueprint3.Text>
                      <div
                        className=""
                      >
                        場所：東京都千代田区丸の内
                      </div>
                    </Blueprint3.Text>
                    <Blueprint3.Text>
                      <div
                        className=""
                      >
                        日時：2018年12月01日 10:30〜
                      </div>
                    </Blueprint3.Text>
                  </div>
                </Blueprint3.Card>
              </EventCard>
            </div>
          </StyledComponent>
        </styled.div>
        <styled.div
          key="2"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bxivhb",
                  "isStatic": true,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  margin: 8px 0;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bxivhb",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c1"
            >
              <EventCard
                catchMessage="イベントの説明です"
                datetime="2018年12月01日 10:30〜"
                eventUrl=""
                interactive={true}
                place="東京都千代田区丸の内"
                title="イベントのタイトル2"
              >
                <Blueprint3.Card
                  elevation={2}
                  interactive={true}
                  onClick={[Function]}
                >
                  <div
                    className="bp3-card bp3-interactive bp3-elevation-2"
                    onClick={[Function]}
                  >
                    <h3
                      className="bp3-heading"
                    >
                      イベントのタイトル2
                    </h3>
                    <Blueprint3.Text>
                      <div
                        className=""
                      >
                        概要：イベントの説明です
                      </div>
                    </Blueprint3.Text>
                    <Blueprint3.Text>
                      <div
                        className=""
                      >
                        場所：東京都千代田区丸の内
                      </div>
                    </Blueprint3.Text>
                    <Blueprint3.Text>
                      <div
                        className=""
                      >
                        日時：2018年12月01日 10:30〜
                      </div>
                    </Blueprint3.Text>
                  </div>
                </Blueprint3.Card>
              </EventCard>
            </div>
          </StyledComponent>
        </styled.div>
        <styled.div
          key="3"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bxivhb",
                  "isStatic": true,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  margin: 8px 0;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bxivhb",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c1"
            >
              <EventCard
                catchMessage="イベントの説明です"
                datetime="2018年12月01日 10:30〜"
                eventUrl=""
                interactive={true}
                place="東京都千代田区丸の内"
                title="イベントのタイトル3"
              >
                <Blueprint3.Card
                  elevation={2}
                  interactive={true}
                  onClick={[Function]}
                >
                  <div
                    className="bp3-card bp3-interactive bp3-elevation-2"
                    onClick={[Function]}
                  >
                    <h3
                      className="bp3-heading"
                    >
                      イベントのタイトル3
                    </h3>
                    <Blueprint3.Text>
                      <div
                        className=""
                      >
                        概要：イベントの説明です
                      </div>
                    </Blueprint3.Text>
                    <Blueprint3.Text>
                      <div
                        className=""
                      >
                        場所：東京都千代田区丸の内
                      </div>
                    </Blueprint3.Text>
                    <Blueprint3.Text>
                      <div
                        className=""
                      >
                        日時：2018年12月01日 10:30〜
                      </div>
                    </Blueprint3.Text>
                  </div>
                </Blueprint3.Card>
              </EventCard>
            </div>
          </StyledComponent>
        </styled.div>
        <styled.div
          key="4"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bxivhb",
                  "isStatic": true,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  margin: 8px 0;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bxivhb",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c1"
            >
              <EventCard
                catchMessage="イベントの説明です"
                datetime="2018年12月01日 10:30〜"
                eventUrl=""
                interactive={true}
                place="東京都千代田区丸の内"
                title="イベントのタイトル4"
              >
                <Blueprint3.Card
                  elevation={2}
                  interactive={true}
                  onClick={[Function]}
                >
                  <div
                    className="bp3-card bp3-interactive bp3-elevation-2"
                    onClick={[Function]}
                  >
                    <h3
                      className="bp3-heading"
                    >
                      イベントのタイトル4
                    </h3>
                    <Blueprint3.Text>
                      <div
                        className=""
                      >
                        概要：イベントの説明です
                      </div>
                    </Blueprint3.Text>
                    <Blueprint3.Text>
                      <div
                        className=""
                      >
                        場所：東京都千代田区丸の内
                      </div>
                    </Blueprint3.Text>
                    <Blueprint3.Text>
                      <div
                        className=""
                      >
                        日時：2018年12月01日 10:30〜
                      </div>
                    </Blueprint3.Text>
                  </div>
                </Blueprint3.Card>
              </EventCard>
            </div>
          </StyledComponent>
        </styled.div>
        <styled.div
          key="5"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bxivhb",
                  "isStatic": true,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  margin: 8px 0;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bxivhb",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c1"
            >
              <EventCard
                catchMessage="イベントの説明です"
                datetime="2018年12月01日 10:30〜"
                eventUrl=""
                interactive={true}
                place="東京都千代田区丸の内"
                title="イベントのタイトル5"
              >
                <Blueprint3.Card
                  elevation={2}
                  interactive={true}
                  onClick={[Function]}
                >
                  <div
                    className="bp3-card bp3-interactive bp3-elevation-2"
                    onClick={[Function]}
                  >
                    <h3
                      className="bp3-heading"
                    >
                      イベントのタイトル5
                    </h3>
                    <Blueprint3.Text>
                      <div
                        className=""
                      >
                        概要：イベントの説明です
                      </div>
                    </Blueprint3.Text>
                    <Blueprint3.Text>
                      <div
                        className=""
                      >
                        場所：東京都千代田区丸の内
                      </div>
                    </Blueprint3.Text>
                    <Blueprint3.Text>
                      <div
                        className=""
                      >
                        日時：2018年12月01日 10:30〜
                      </div>
                    </Blueprint3.Text>
                  </div>
                </Blueprint3.Card>
              </EventCard>
            </div>
          </StyledComponent>
        </styled.div>
        <styled.div
          key="6"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bxivhb",
                  "isStatic": true,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  margin: 8px 0;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bxivhb",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c1"
            >
              <EventCard
                catchMessage="イベントの説明です"
                datetime="2018年12月01日 10:30〜"
                eventUrl=""
                interactive={true}
                place="東京都千代田区丸の内"
                title="イベントのタイトル6"
              >
                <Blueprint3.Card
                  elevation={2}
                  interactive={true}
                  onClick={[Function]}
                >
                  <div
                    className="bp3-card bp3-interactive bp3-elevation-2"
                    onClick={[Function]}
                  >
                    <h3
                      className="bp3-heading"
                    >
                      イベントのタイトル6
                    </h3>
                    <Blueprint3.Text>
                      <div
                        className=""
                      >
                        概要：イベントの説明です
                      </div>
                    </Blueprint3.Text>
                    <Blueprint3.Text>
                      <div
                        className=""
                      >
                        場所：東京都千代田区丸の内
                      </div>
                    </Blueprint3.Text>
                    <Blueprint3.Text>
                      <div
                        className=""
                      >
                        日時：2018年12月01日 10:30〜
                      </div>
                    </Blueprint3.Text>
                  </div>
                </Blueprint3.Card>
              </EventCard>
            </div>
          </StyledComponent>
        </styled.div>
        <styled.div
          key="7"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bxivhb",
                  "isStatic": true,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  margin: 8px 0;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bxivhb",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c1"
            >
              <EventCard
                catchMessage="イベントの説明です"
                datetime="2018年12月01日 10:30〜"
                eventUrl=""
                interactive={true}
                place="東京都千代田区丸の内"
                title="イベントのタイトル7"
              >
                <Blueprint3.Card
                  elevation={2}
                  interactive={true}
                  onClick={[Function]}
                >
                  <div
                    className="bp3-card bp3-interactive bp3-elevation-2"
                    onClick={[Function]}
                  >
                    <h3
                      className="bp3-heading"
                    >
                      イベントのタイトル7
                    </h3>
                    <Blueprint3.Text>
                      <div
                        className=""
                      >
                        概要：イベントの説明です
                      </div>
                    </Blueprint3.Text>
                    <Blueprint3.Text>
                      <div
                        className=""
                      >
                        場所：東京都千代田区丸の内
                      </div>
                    </Blueprint3.Text>
                    <Blueprint3.Text>
                      <div
                        className=""
                      >
                        日時：2018年12月01日 10:30〜
                      </div>
                    </Blueprint3.Text>
                  </div>
                </Blueprint3.Card>
              </EventCard>
            </div>
          </StyledComponent>
        </styled.div>
        <styled.div
          key="8"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bxivhb",
                  "isStatic": true,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  margin: 8px 0;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bxivhb",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c1"
            >
              <EventCard
                catchMessage="イベントの説明です"
                datetime="2018年12月01日 10:30〜"
                eventUrl=""
                interactive={true}
                place="東京都千代田区丸の内"
                title="イベントのタイトル8"
              >
                <Blueprint3.Card
                  elevation={2}
                  interactive={true}
                  onClick={[Function]}
                >
                  <div
                    className="bp3-card bp3-interactive bp3-elevation-2"
                    onClick={[Function]}
                  >
                    <h3
                      className="bp3-heading"
                    >
                      イベントのタイトル8
                    </h3>
                    <Blueprint3.Text>
                      <div
                        className=""
                      >
                        概要：イベントの説明です
                      </div>
                    </Blueprint3.Text>
                    <Blueprint3.Text>
                      <div
                        className=""
                      >
                        場所：東京都千代田区丸の内
                      </div>
                    </Blueprint3.Text>
                    <Blueprint3.Text>
                      <div
                        className=""
                      >
                        日時：2018年12月01日 10:30〜
                      </div>
                    </Blueprint3.Text>
                  </div>
                </Blueprint3.Card>
              </EventCard>
            </div>
          </StyledComponent>
        </styled.div>
        <styled.div
          key="9"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bxivhb",
                  "isStatic": true,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  margin: 8px 0;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bxivhb",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c1"
            >
              <EventCard
                catchMessage="イベントの説明です"
                datetime="2018年12月01日 10:30〜"
                eventUrl=""
                interactive={true}
                place="東京都千代田区丸の内"
                title="イベントのタイトル9"
              >
                <Blueprint3.Card
                  elevation={2}
                  interactive={true}
                  onClick={[Function]}
                >
                  <div
                    className="bp3-card bp3-interactive bp3-elevation-2"
                    onClick={[Function]}
                  >
                    <h3
                      className="bp3-heading"
                    >
                      イベントのタイトル9
                    </h3>
                    <Blueprint3.Text>
                      <div
                        className=""
                      >
                        概要：イベントの説明です
                      </div>
                    </Blueprint3.Text>
                    <Blueprint3.Text>
                      <div
                        className=""
                      >
                        場所：東京都千代田区丸の内
                      </div>
                    </Blueprint3.Text>
                    <Blueprint3.Text>
                      <div
                        className=""
                      >
                        日時：2018年12月01日 10:30〜
                      </div>
                    </Blueprint3.Text>
                  </div>
                </Blueprint3.Card>
              </EventCard>
            </div>
          </StyledComponent>
        </styled.div>
        <FloatingButton
          icon="notifications"
          onClick={[Function]}
        >
          <Styled(RoundButton)
            icon="notifications"
            onClick={[Function]}
            xlarge={true}
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bwzfXH",
                    "isStatic": true,
                    "lastClassName": "c2",
                    "rules": Array [
                      "
  position: fixed;
  right: 16px;
  bottom: 16px;
",
                    ],
                  },
                  "displayName": "Styled(RoundButton)",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bwzfXH",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                  Symbol(Symbol.hasInstance): [Function],
                }
              }
              forwardedRef={null}
              icon="notifications"
              onClick={[Function]}
              xlarge={true}
            >
              <RoundButton
                className="c2"
                icon="notifications"
                onClick={[Function]}
                xlarge={true}
              >
                <Styled(Blueprint3.Button)
                  className="c2"
                  icon="notifications"
                  onClick={[Function]}
                  xlarge={1}
                >
                  <StyledComponent
                    className="c2"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bdVaJa",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            "
  border-radius: 50%;
  height: ",
                            [Function],
                            ";
  width: ",
                            [Function],
                            ";
",
                          ],
                        },
                        "displayName": "Styled(Blueprint3.Button)",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bdVaJa",
                        "target": [Function],
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                        Symbol(Symbol.hasInstance): [Function],
                      }
                    }
                    forwardedRef={null}
                    icon="notifications"
                    onClick={[Function]}
                    xlarge={1}
                  >
                    <Blueprint3.Button
                      className="c2 c3"
                      icon="notifications"
                      onClick={[Function]}
                      xlarge={1}
                    >
                      <button
                        className="bp3-button c2 c3"
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        type="button"
                        xlarge={1}
                      >
                        <Blueprint3.Icon
                          icon="notifications"
                          key="leftIcon"
                        >
                          <span
                            className="bp3-icon bp3-icon-notifications"
                            icon="notifications"
                          >
                            <svg
                              data-icon="notifications"
                              height={16}
                              viewBox="0 0 16 16"
                              width={16}
                            >
                              <desc>
                                notifications
                              </desc>
                              <path
                                d="M8 16c1.1 0 2-.9 2-2H6c0 1.1.9 2 2 2zm6-5c-.55 0-1-.45-1-1V6c0-2.43-1.73-4.45-4.02-4.9 0-.04.02-.06.02-.1 0-.55-.45-1-1-1S7 .45 7 1c0 .04.02.06.02.1A4.992 4.992 0 0 0 3 6v4c0 .55-.45 1-1 1s-1 .45-1 1 .45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1z"
                                fillRule="evenodd"
                                key="0"
                              />
                            </svg>
                          </span>
                        </Blueprint3.Icon>
                        <Blueprint3.Icon
                          key="rightIcon"
                        />
                      </button>
                    </Blueprint3.Button>
                  </StyledComponent>
                </Styled(Blueprint3.Button)>
              </RoundButton>
            </StyledComponent>
          </Styled(RoundButton)>
        </FloatingButton>
      </div>
    </StyledComponent>
  </styled.div>
</InternalEvents>
`;
